name: Deploy to GitHub Pages

on:
  push:
    branches:
      - master

jobs:
  build:
    name: Build site
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          submodules: true
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16'
          cache: 'npm'

      - name: Install Node.js dependencies
        run: npm install

      - name: Setup Hugo
        uses: peaceiris/actions-hugo@v2
        with:
          hugo-version: '0.87.0'
          extended: true

      - name: Cache Dart Sass Embedded
        uses: actions/cache@v2
        with:
          path: ~/dart-sass-embedded/dart-sass-embedded
          key: ${{ runner.os }}-dartsass

      - name: Setup Dart Sass Embedded
        run: |
          if [ ! -f "$HOME/dart-sass-embedded/dart-sass-embedded" ]
          then
            cd /tmp
            curl -L https://github.com/sass/dart-sass-embedded/releases/download/1.0.0-beta.10/sass_embedded-1.0.0-beta.10-linux-x64.tar.gz -o dart_sass_embedded.tar.gz
            tar -xvf dart_sass_embedded.tar.gz
            mkdir ~/dart-sass-embedded
            cp /tmp/sass_embedded/dart-sass-embedded ~/dart-sass-embedded
          fi
          echo "$HOME/dart-sass-embedded" >> $GITHUB_PATH

      - name: Cache Hugo modules
        uses: actions/cache@v2
        env:
          cache-name: hugomod
        with:
          path: /tmp/hugo_cache
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('./go.sum') }}
          restore-keys:
            ${{ runner.os }}-build-${{ env.cache-name }}

      - name: Build site
        run: hugo --minify

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: site-production
          path: ./public

  deploy:
    name: Deploy site
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/master'

    steps:
      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: site-production
          path: ./public

      - name: Deploy
        uses: peaceiris/actions-gh-pages@v3
        env:
          TOKEN: ${{ steps.access_token.outputs.token }}
        with:
          deploy_key: ${{ secrets.DEPLOY_KEY }}
          external_repository: LiquidPL/LiquidPL.github.io
          publish_branch: master
          publish_dir: ./public
          user_name: 'github-actions[bot]'
          user_email: 'github-actions[bot]@users.noreply.github.com'
